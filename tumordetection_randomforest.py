# -*- coding: utf-8 -*-
"""tumordetection_randomforest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1moqElDXrpMTn-rL_ILq1DzhkmUwNPsjI

**preprocessing**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt 
import seaborn as sns

#importing and reading the csv file
data=pd.read_csv('/Tumor_Detection.csv')
data.columns

data.info()

data.drop(['id'],axis=1,inplace=True)

type(data.columns)

l=list(data.columns)
print(l)

#create start points
features_mean=l[:11]
features_se=l[11:21]
features_Worst=l[21:]

data['diagnosis'].unique()

sns.countplot(data['diagnosis'],label='count')

data.shape

data.describe()

corr=data.corr()

#heat map
plt.figure(figsize=(10,10))
sns.heatmap(corr)

data['diagnosis']=data['diagnosis'].map({'M':1,'B':0})
data.head()

data.head()

data['diagnosis'].unique()

x=data.drop('diagnosis',axis=1)
x.head()

y=data['diagnosis']
print(y)

"""**Training dataset**"""

#divide dataset into train and test set
from sklearn.preprocessing import StandardScaler 
from sklearn.model_selection import train_test_split

X_train,X_test,Y_train,Y_test = train_test_split(x,y,test_size=0.3)

X_train.shape

print(X_test.shape,Y_train.shape,Y_test.shape)

ss=StandardScaler()
X_train=ss.fit_transform(X_train)
X_test=ss.transform(X_test)
print(X_train)

"""**applying random forest**"""

from sklearn.metrics import accuracy_score
from sklearn.ensemble import RandomForestClassifier

rfc = RandomForestClassifier()
rfc.fit(X_train,Y_train)
y_pred=rfc.predict(X_test)
print((accuracy_score(Y_test,y_pred))*100)